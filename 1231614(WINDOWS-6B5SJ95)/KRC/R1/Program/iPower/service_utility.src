&ACCESS RVO1
&REL 106
&PARAM DISKPATH = KRC:\R1\Program\CHAH
DEF service_utility ( )
   move_home()
   ;art_move_center()
   art_move_pick_point(2)
END
; Check if robot is in home position. 
; If not, inform user that the first motion may be unsafe.
;
GLOBAL DEF MOVE_HOME()
   ;IF NOT $IN_HOME THEN    
;FOLD PTP HOME Vel=25 % PDAT9;%{PE}%R 8.3.44,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:HOME, 3:, 5:25, 7:PDAT9
$BWDSTART=FALSE
PDAT_ACT=PPDAT9
FDAT_ACT=FHOME
BAS(#PTP_PARAMS,25)
$H_POS=XHOME
PTP XHOME 
;ENDFOLD
   ;ENDIF
END
; Move service.
;
;
GLOBAL DEF MOVE_SERVICE()
   ;FOLD PTP serv CONT Vel=25 % PDAT17 Tool[1]:calibr Base[0];%{PE}%R 8.3.44,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:serv, 3:C_DIS, 5:25, 7:PDAT17
   $BWDSTART=FALSE
   PDAT_ACT=PPDAT17
   FDAT_ACT=Fserv
   BAS(#PTP_PARAMS,25)
   PTP Xserv C_DIS
   ;ENDFOLD
   ;FOLD PTP P6 CONT Vel=25 % PDAT5 Tool[1] Base[0];%{PE}%R 8.3.43,%MKUKATPBASIS,%CMOVE,%VPTP,%P 1:PTP, 2:P6, 3:C_DIS, 5:25, 7:PDAT5
   $BWDSTART=FALSE
   PDAT_ACT=PPDAT5
   FDAT_ACT=FP6
   BAS(#PTP_PARAMS,25)
   PTP XP6 C_DIS
   ;ENDFOLD
END
;
; Move to pick point.
;
GLOBAL DEF ART_move_pick_point(line_num: IN)
   DECL INT line_num
   DECL FRAME OFFSET
   
   ARTGripSupportUpChk()
   ARTGripForkClChk(ART_line[line_num].scheme_number)
   
   SWITCH line_num
      CASE 1
;FOLD LIN pick_point CONT Vel=2 m/s CPDAT1 Tool[0] Base[1]:pp1;%{PE}%R 8.3.44,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:pick_point, 3:C_DIS C_DIS, 5:2, 7:CPDAT1
$BWDSTART=FALSE
LDAT_ACT=LCPDAT1
FDAT_ACT=Fpick_point
BAS(#CP_PARAMS,2)
LIN Xpick_point C_DIS C_DIS
;ENDFOLD

      CASE 2
;FOLD LIN pick_point_2 CONT Vel=2 m/s CPDAT11 Tool[0] Base[2]:pp2;%{PE}%R 8.3.44,%MKUKATPBASIS,%CMOVE,%VLIN,%P 1:LIN, 2:pick_point_2, 3:C_DIS C_DIS, 5:2, 7:CPDAT11
$BWDSTART=FALSE
LDAT_ACT=LCPDAT11
FDAT_ACT=Fpick_point_2
BAS(#CP_PARAMS,2)
LIN Xpick_point_2 C_DIS C_DIS
;ENDFOLD

   ENDSWITCH
END
;
; Move out pick point.
;
GLOBAL DEF move_pp_after(line_num: IN)
   DECL INT line_num
   DECL FRAME OFFSET
   $BWDSTART=FALSE
   LDAT_ACT={VEL 2.00000,ACC 100.000,APO_DIST 100.000,APO_FAC 50.0000,AXIS_VEL 100.000,AXIS_ACC 100.000,ORI_TYP #VAR,CIRC_TYP #BASE,JERK_FAC 50.0000,GEAR_JERK 50.0000,EXAX_IGN 0}
   SWITCH line_num
      CASE 1
         OFFSET = {X 0, Y -20, Z 500, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 1,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,1)
         LIN OFFSET:Xpick_point C_DIS C_DIS
      CASE 2
         OFFSET = {X 0, Y -20, Z 500, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 2,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,1)
         LIN OFFSET:Xpick_point_2 C_DIS C_DIS
   ENDSWITCH
END
;
; Move to point before pick point.
;
GLOBAL DEF ART_move_pre_pp(line_num: IN)
   DECL INT line_num
   DECL FRAME OFFSET
   $BWDSTART=FALSE
   LDAT_ACT={VEL 2.00000,ACC 100.000,APO_DIST 100.000,APO_FAC 50.0000,AXIS_VEL 100.000,AXIS_ACC 100.000,ORI_TYP #VAR,CIRC_TYP #BASE,JERK_FAC 50.0000,GEAR_JERK 50.0000,EXAX_IGN 0}
   SWITCH line_num
      CASE 1
         OFFSET = {X -300, Y 0, Z 300, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 1,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,2)
         LIN OFFSET:Xpick_point C_DIS C_DIS
         OFFSET = {X -300, Y 0, Z 0, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 1,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,2)
         LIN OFFSET:Xpick_point C_DIS C_DIS
      CASE 2
         OFFSET = {X -300, Y 0, Z 300, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 2,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,2)
         LIN OFFSET:Xpick_point_2 C_DIS C_DIS
         OFFSET = {X -300, Y 0, Z 0, A 0, B 0, C 0}
         FDAT_ACT={TOOL_NO 0,BASE_NO 2,IPO_FRAME #BASE,POINT2[] " ",TQ_STATE FALSE}
         BAS(#CP_PARAMS,2)
         LIN OFFSET:Xpick_point_2 C_DIS C_DIS
   ENDSWITCH
END
;
; Move center point for waiting
;
GLOBAL DEF ART_move_center()
   $BWDSTART=FALSE
   PDAT_ACT={VEL 100.000,ACC 100.000,APO_DIST 400.000,APO_MODE #CDIS,GEAR_JERK 50.0000,EXAX_IGN 0}
   FDAT_ACT=Fcenter
   BAS(#PTP_PARAMS,30)
   ;TRIGGER WHEN DISTANCE = 0 DELAY = 0 DO ARTForkClose() PRIO = -1
   PTP {A2 -110.000,A3 86.0000} C_DIS
END
; Move check gripper.
;
;
GLOBAL DEF MOVE_SRV_FROM_PP()
END
;
GLOBAL DEF MOVE_SRV_FROM_RELEASE()
END


